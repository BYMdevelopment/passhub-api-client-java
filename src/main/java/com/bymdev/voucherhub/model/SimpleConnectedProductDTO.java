/*
 * PassHub API
 * PassHub API documentation
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bymdev.voucherhub.model;

import java.util.Objects;
import com.bymdev.voucherhub.model.Rule;
import com.bymdev.voucherhub.model.UserDTO;
import com.bymdev.voucherhub.model.VendorDTO;
import com.bymdev.voucherhub.model.VoucherPattern;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SimpleConnectedProductDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-21T18:51:48.018+03:00")
public class SimpleConnectedProductDTO {
  @SerializedName("allowRecharge")
  private Boolean allowRecharge = null;

  @SerializedName("countryCode")
  private String countryCode = null;

  /**
   * Gets or Sets customerType
   */
  @JsonAdapter(CustomerTypeEnum.Adapter.class)
  public enum CustomerTypeEnum {
    ADULT("ADULT"),
    
    CHILD("CHILD"),
    
    SENIOR("SENIOR");

    private String value;

    CustomerTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CustomerTypeEnum fromValue(String text) {
      for (CustomerTypeEnum b : CustomerTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CustomerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CustomerTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CustomerTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CustomerTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("customerType")
  private CustomerTypeEnum customerType = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("locationCode")
  private String locationCode = null;

  @SerializedName("locationName")
  private String locationName = null;

  @SerializedName("maxValidationsInPass")
  private Integer maxValidationsInPass = null;

  @SerializedName("modifiedBy")
  private UserDTO modifiedBy = null;

  @SerializedName("modifiedDate")
  private String modifiedDate = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("packageProductId")
  private String packageProductId = null;

  @SerializedName("price")
  private Double price = null;

  /**
   * Gets or Sets printType
   */
  @JsonAdapter(PrintTypeEnum.Adapter.class)
  public enum PrintTypeEnum {
    AUTO_PRINT("AUTO_PRINT"),
    
    NOT_PRINTABLE("NOT_PRINTABLE");

    private String value;

    PrintTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PrintTypeEnum fromValue(String text) {
      for (PrintTypeEnum b : PrintTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PrintTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PrintTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PrintTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PrintTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("printType")
  private PrintTypeEnum printType = null;

  @SerializedName("productId")
  private String productId = null;

  @SerializedName("rechargePrice")
  private Double rechargePrice = null;

  @SerializedName("retailPrice")
  private Double retailPrice = null;

  @SerializedName("sku")
  private String sku = null;

  @SerializedName("subProductId")
  private String subProductId = null;

  @SerializedName("tags")
  private java.util.List<String> tags = null;

  @SerializedName("timezone")
  private String timezone = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    BASIC_SINGLE("BASIC_SINGLE"),
    
    BASIC_VALID_HOURS("BASIC_VALID_HOURS"),
    
    PASS_LIMITED("PASS_LIMITED"),
    
    PASS_UNLIMITED("PASS_UNLIMITED"),
    
    PASS_CALENDAR("PASS_CALENDAR"),
    
    FLEXPASS("FLEXPASS"),
    
    PASS_CURRENCY("PASS_CURRENCY");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("validValue")
  private Integer validValue = null;

  @SerializedName("validationRules")
  private java.util.List<Rule> validationRules = null;

  @SerializedName("validationTag")
  private String validationTag = null;

  @SerializedName("vendor")
  private VendorDTO vendor = null;

  @SerializedName("vendorAccountId")
  private String vendorAccountId = null;

  @SerializedName("vendorSku")
  private String vendorSku = null;

  @SerializedName("voucherPattern")
  private VoucherPattern voucherPattern = null;

  /**
   * Gets or Sets voucherType
   */
  @JsonAdapter(VoucherTypeEnum.Adapter.class)
  public enum VoucherTypeEnum {
    DEFAULT("DEFAULT"),
    
    CUSTOM("CUSTOM");

    private String value;

    VoucherTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VoucherTypeEnum fromValue(String text) {
      for (VoucherTypeEnum b : VoucherTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<VoucherTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VoucherTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VoucherTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return VoucherTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("voucherType")
  private VoucherTypeEnum voucherType = null;

  public SimpleConnectedProductDTO allowRecharge(Boolean allowRecharge) {
    this.allowRecharge = allowRecharge;
    return this;
  }

   /**
   * Get allowRecharge
   * @return allowRecharge
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllowRecharge() {
    return allowRecharge;
  }

  public void setAllowRecharge(Boolean allowRecharge) {
    this.allowRecharge = allowRecharge;
  }

  public SimpleConnectedProductDTO countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @ApiModelProperty(value = "")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public SimpleConnectedProductDTO customerType(CustomerTypeEnum customerType) {
    this.customerType = customerType;
    return this;
  }

   /**
   * Get customerType
   * @return customerType
  **/
  @ApiModelProperty(value = "")
  public CustomerTypeEnum getCustomerType() {
    return customerType;
  }

  public void setCustomerType(CustomerTypeEnum customerType) {
    this.customerType = customerType;
  }

  public SimpleConnectedProductDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SimpleConnectedProductDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public SimpleConnectedProductDTO locationCode(String locationCode) {
    this.locationCode = locationCode;
    return this;
  }

   /**
   * Get locationCode
   * @return locationCode
  **/
  @ApiModelProperty(value = "")
  public String getLocationCode() {
    return locationCode;
  }

  public void setLocationCode(String locationCode) {
    this.locationCode = locationCode;
  }

  public SimpleConnectedProductDTO locationName(String locationName) {
    this.locationName = locationName;
    return this;
  }

   /**
   * Get locationName
   * @return locationName
  **/
  @ApiModelProperty(value = "")
  public String getLocationName() {
    return locationName;
  }

  public void setLocationName(String locationName) {
    this.locationName = locationName;
  }

  public SimpleConnectedProductDTO maxValidationsInPass(Integer maxValidationsInPass) {
    this.maxValidationsInPass = maxValidationsInPass;
    return this;
  }

   /**
   * Get maxValidationsInPass
   * @return maxValidationsInPass
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxValidationsInPass() {
    return maxValidationsInPass;
  }

  public void setMaxValidationsInPass(Integer maxValidationsInPass) {
    this.maxValidationsInPass = maxValidationsInPass;
  }

  public SimpleConnectedProductDTO modifiedBy(UserDTO modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @ApiModelProperty(value = "")
  public UserDTO getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(UserDTO modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public SimpleConnectedProductDTO modifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @ApiModelProperty(value = "")
  public String getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public SimpleConnectedProductDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SimpleConnectedProductDTO packageProductId(String packageProductId) {
    this.packageProductId = packageProductId;
    return this;
  }

   /**
   * Get packageProductId
   * @return packageProductId
  **/
  @ApiModelProperty(value = "")
  public String getPackageProductId() {
    return packageProductId;
  }

  public void setPackageProductId(String packageProductId) {
    this.packageProductId = packageProductId;
  }

  public SimpleConnectedProductDTO price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(value = "")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public SimpleConnectedProductDTO printType(PrintTypeEnum printType) {
    this.printType = printType;
    return this;
  }

   /**
   * Get printType
   * @return printType
  **/
  @ApiModelProperty(value = "")
  public PrintTypeEnum getPrintType() {
    return printType;
  }

  public void setPrintType(PrintTypeEnum printType) {
    this.printType = printType;
  }

  public SimpleConnectedProductDTO productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @ApiModelProperty(value = "")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public SimpleConnectedProductDTO rechargePrice(Double rechargePrice) {
    this.rechargePrice = rechargePrice;
    return this;
  }

   /**
   * Get rechargePrice
   * @return rechargePrice
  **/
  @ApiModelProperty(value = "")
  public Double getRechargePrice() {
    return rechargePrice;
  }

  public void setRechargePrice(Double rechargePrice) {
    this.rechargePrice = rechargePrice;
  }

  public SimpleConnectedProductDTO retailPrice(Double retailPrice) {
    this.retailPrice = retailPrice;
    return this;
  }

   /**
   * Get retailPrice
   * @return retailPrice
  **/
  @ApiModelProperty(value = "")
  public Double getRetailPrice() {
    return retailPrice;
  }

  public void setRetailPrice(Double retailPrice) {
    this.retailPrice = retailPrice;
  }

  public SimpleConnectedProductDTO sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * Get sku
   * @return sku
  **/
  @ApiModelProperty(value = "")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }

  public SimpleConnectedProductDTO subProductId(String subProductId) {
    this.subProductId = subProductId;
    return this;
  }

   /**
   * Get subProductId
   * @return subProductId
  **/
  @ApiModelProperty(value = "")
  public String getSubProductId() {
    return subProductId;
  }

  public void setSubProductId(String subProductId) {
    this.subProductId = subProductId;
  }

  public SimpleConnectedProductDTO tags(java.util.List<String> tags) {
    this.tags = tags;
    return this;
  }

  public SimpleConnectedProductDTO addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new java.util.ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public java.util.List<String> getTags() {
    return tags;
  }

  public void setTags(java.util.List<String> tags) {
    this.tags = tags;
  }

  public SimpleConnectedProductDTO timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @ApiModelProperty(value = "")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public SimpleConnectedProductDTO type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public SimpleConnectedProductDTO validValue(Integer validValue) {
    this.validValue = validValue;
    return this;
  }

   /**
   * Get validValue
   * @return validValue
  **/
  @ApiModelProperty(value = "")
  public Integer getValidValue() {
    return validValue;
  }

  public void setValidValue(Integer validValue) {
    this.validValue = validValue;
  }

  public SimpleConnectedProductDTO validationRules(java.util.List<Rule> validationRules) {
    this.validationRules = validationRules;
    return this;
  }

  public SimpleConnectedProductDTO addValidationRulesItem(Rule validationRulesItem) {
    if (this.validationRules == null) {
      this.validationRules = new java.util.ArrayList<>();
    }
    this.validationRules.add(validationRulesItem);
    return this;
  }

   /**
   * Get validationRules
   * @return validationRules
  **/
  @ApiModelProperty(value = "")
  public java.util.List<Rule> getValidationRules() {
    return validationRules;
  }

  public void setValidationRules(java.util.List<Rule> validationRules) {
    this.validationRules = validationRules;
  }

  public SimpleConnectedProductDTO validationTag(String validationTag) {
    this.validationTag = validationTag;
    return this;
  }

   /**
   * Get validationTag
   * @return validationTag
  **/
  @ApiModelProperty(value = "")
  public String getValidationTag() {
    return validationTag;
  }

  public void setValidationTag(String validationTag) {
    this.validationTag = validationTag;
  }

  public SimpleConnectedProductDTO vendor(VendorDTO vendor) {
    this.vendor = vendor;
    return this;
  }

   /**
   * Get vendor
   * @return vendor
  **/
  @ApiModelProperty(value = "")
  public VendorDTO getVendor() {
    return vendor;
  }

  public void setVendor(VendorDTO vendor) {
    this.vendor = vendor;
  }

  public SimpleConnectedProductDTO vendorAccountId(String vendorAccountId) {
    this.vendorAccountId = vendorAccountId;
    return this;
  }

   /**
   * Get vendorAccountId
   * @return vendorAccountId
  **/
  @ApiModelProperty(value = "")
  public String getVendorAccountId() {
    return vendorAccountId;
  }

  public void setVendorAccountId(String vendorAccountId) {
    this.vendorAccountId = vendorAccountId;
  }

  public SimpleConnectedProductDTO vendorSku(String vendorSku) {
    this.vendorSku = vendorSku;
    return this;
  }

   /**
   * Get vendorSku
   * @return vendorSku
  **/
  @ApiModelProperty(value = "")
  public String getVendorSku() {
    return vendorSku;
  }

  public void setVendorSku(String vendorSku) {
    this.vendorSku = vendorSku;
  }

  public SimpleConnectedProductDTO voucherPattern(VoucherPattern voucherPattern) {
    this.voucherPattern = voucherPattern;
    return this;
  }

   /**
   * Get voucherPattern
   * @return voucherPattern
  **/
  @ApiModelProperty(value = "")
  public VoucherPattern getVoucherPattern() {
    return voucherPattern;
  }

  public void setVoucherPattern(VoucherPattern voucherPattern) {
    this.voucherPattern = voucherPattern;
  }

  public SimpleConnectedProductDTO voucherType(VoucherTypeEnum voucherType) {
    this.voucherType = voucherType;
    return this;
  }

   /**
   * Get voucherType
   * @return voucherType
  **/
  @ApiModelProperty(value = "")
  public VoucherTypeEnum getVoucherType() {
    return voucherType;
  }

  public void setVoucherType(VoucherTypeEnum voucherType) {
    this.voucherType = voucherType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimpleConnectedProductDTO simpleConnectedProductDTO = (SimpleConnectedProductDTO) o;
    return Objects.equals(this.allowRecharge, simpleConnectedProductDTO.allowRecharge) &&
        Objects.equals(this.countryCode, simpleConnectedProductDTO.countryCode) &&
        Objects.equals(this.customerType, simpleConnectedProductDTO.customerType) &&
        Objects.equals(this.description, simpleConnectedProductDTO.description) &&
        Objects.equals(this.id, simpleConnectedProductDTO.id) &&
        Objects.equals(this.locationCode, simpleConnectedProductDTO.locationCode) &&
        Objects.equals(this.locationName, simpleConnectedProductDTO.locationName) &&
        Objects.equals(this.maxValidationsInPass, simpleConnectedProductDTO.maxValidationsInPass) &&
        Objects.equals(this.modifiedBy, simpleConnectedProductDTO.modifiedBy) &&
        Objects.equals(this.modifiedDate, simpleConnectedProductDTO.modifiedDate) &&
        Objects.equals(this.name, simpleConnectedProductDTO.name) &&
        Objects.equals(this.packageProductId, simpleConnectedProductDTO.packageProductId) &&
        Objects.equals(this.price, simpleConnectedProductDTO.price) &&
        Objects.equals(this.printType, simpleConnectedProductDTO.printType) &&
        Objects.equals(this.productId, simpleConnectedProductDTO.productId) &&
        Objects.equals(this.rechargePrice, simpleConnectedProductDTO.rechargePrice) &&
        Objects.equals(this.retailPrice, simpleConnectedProductDTO.retailPrice) &&
        Objects.equals(this.sku, simpleConnectedProductDTO.sku) &&
        Objects.equals(this.subProductId, simpleConnectedProductDTO.subProductId) &&
        Objects.equals(this.tags, simpleConnectedProductDTO.tags) &&
        Objects.equals(this.timezone, simpleConnectedProductDTO.timezone) &&
        Objects.equals(this.type, simpleConnectedProductDTO.type) &&
        Objects.equals(this.validValue, simpleConnectedProductDTO.validValue) &&
        Objects.equals(this.validationRules, simpleConnectedProductDTO.validationRules) &&
        Objects.equals(this.validationTag, simpleConnectedProductDTO.validationTag) &&
        Objects.equals(this.vendor, simpleConnectedProductDTO.vendor) &&
        Objects.equals(this.vendorAccountId, simpleConnectedProductDTO.vendorAccountId) &&
        Objects.equals(this.vendorSku, simpleConnectedProductDTO.vendorSku) &&
        Objects.equals(this.voucherPattern, simpleConnectedProductDTO.voucherPattern) &&
        Objects.equals(this.voucherType, simpleConnectedProductDTO.voucherType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowRecharge, countryCode, customerType, description, id, locationCode, locationName, maxValidationsInPass, modifiedBy, modifiedDate, name, packageProductId, price, printType, productId, rechargePrice, retailPrice, sku, subProductId, tags, timezone, type, validValue, validationRules, validationTag, vendor, vendorAccountId, vendorSku, voucherPattern, voucherType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimpleConnectedProductDTO {\n");
    
    sb.append("    allowRecharge: ").append(toIndentedString(allowRecharge)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    customerType: ").append(toIndentedString(customerType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    locationName: ").append(toIndentedString(locationName)).append("\n");
    sb.append("    maxValidationsInPass: ").append(toIndentedString(maxValidationsInPass)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    packageProductId: ").append(toIndentedString(packageProductId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    printType: ").append(toIndentedString(printType)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    rechargePrice: ").append(toIndentedString(rechargePrice)).append("\n");
    sb.append("    retailPrice: ").append(toIndentedString(retailPrice)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    subProductId: ").append(toIndentedString(subProductId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    validValue: ").append(toIndentedString(validValue)).append("\n");
    sb.append("    validationRules: ").append(toIndentedString(validationRules)).append("\n");
    sb.append("    validationTag: ").append(toIndentedString(validationTag)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    vendorAccountId: ").append(toIndentedString(vendorAccountId)).append("\n");
    sb.append("    vendorSku: ").append(toIndentedString(vendorSku)).append("\n");
    sb.append("    voucherPattern: ").append(toIndentedString(voucherPattern)).append("\n");
    sb.append("    voucherType: ").append(toIndentedString(voucherType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

