/*
 * PassHub API
 * PassHub API documentation
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bymdev.voucherhub.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ValidationItemStatusDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-21T14:17:27.430+03:00")
public class ValidationItemStatusDTO {
  @SerializedName("balance")
  private Double balance = null;

  @SerializedName("expiryDate")
  private String expiryDate = null;

  @SerializedName("maxUseCount")
  private Integer maxUseCount = null;

  @SerializedName("maxUseHours")
  private Integer maxUseHours = null;

  @SerializedName("startDate")
  private String startDate = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    BASIC_SINGLE("BASIC_SINGLE"),
    
    BASIC_VALID_HOURS("BASIC_VALID_HOURS"),
    
    PASS_LIMITED("PASS_LIMITED"),
    
    PASS_UNLIMITED("PASS_UNLIMITED"),
    
    PASS_CALENDAR("PASS_CALENDAR"),
    
    FLEXPASS("FLEXPASS"),
    
    PASS_CURRENCY("PASS_CURRENCY");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("usedCount")
  private Integer usedCount = null;

  public ValidationItemStatusDTO balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(value = "")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public ValidationItemStatusDTO expiryDate(String expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @ApiModelProperty(value = "")
  public String getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(String expiryDate) {
    this.expiryDate = expiryDate;
  }

  public ValidationItemStatusDTO maxUseCount(Integer maxUseCount) {
    this.maxUseCount = maxUseCount;
    return this;
  }

   /**
   * Get maxUseCount
   * @return maxUseCount
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxUseCount() {
    return maxUseCount;
  }

  public void setMaxUseCount(Integer maxUseCount) {
    this.maxUseCount = maxUseCount;
  }

  public ValidationItemStatusDTO maxUseHours(Integer maxUseHours) {
    this.maxUseHours = maxUseHours;
    return this;
  }

   /**
   * Get maxUseHours
   * @return maxUseHours
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxUseHours() {
    return maxUseHours;
  }

  public void setMaxUseHours(Integer maxUseHours) {
    this.maxUseHours = maxUseHours;
  }

  public ValidationItemStatusDTO startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }

  public ValidationItemStatusDTO type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public ValidationItemStatusDTO usedCount(Integer usedCount) {
    this.usedCount = usedCount;
    return this;
  }

   /**
   * Get usedCount
   * @return usedCount
  **/
  @ApiModelProperty(value = "")
  public Integer getUsedCount() {
    return usedCount;
  }

  public void setUsedCount(Integer usedCount) {
    this.usedCount = usedCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidationItemStatusDTO validationItemStatusDTO = (ValidationItemStatusDTO) o;
    return Objects.equals(this.balance, validationItemStatusDTO.balance) &&
        Objects.equals(this.expiryDate, validationItemStatusDTO.expiryDate) &&
        Objects.equals(this.maxUseCount, validationItemStatusDTO.maxUseCount) &&
        Objects.equals(this.maxUseHours, validationItemStatusDTO.maxUseHours) &&
        Objects.equals(this.startDate, validationItemStatusDTO.startDate) &&
        Objects.equals(this.type, validationItemStatusDTO.type) &&
        Objects.equals(this.usedCount, validationItemStatusDTO.usedCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(balance, expiryDate, maxUseCount, maxUseHours, startDate, type, usedCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidationItemStatusDTO {\n");
    
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    maxUseCount: ").append(toIndentedString(maxUseCount)).append("\n");
    sb.append("    maxUseHours: ").append(toIndentedString(maxUseHours)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    usedCount: ").append(toIndentedString(usedCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

