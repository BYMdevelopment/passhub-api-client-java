/*
 * PassHub API
 * PassHub API documentation
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bymdev.voucherhub.model;

import java.util.Objects;
import com.bymdev.voucherhub.model.VoucherPattern;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ProductDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-21T18:51:48.018+03:00")
public class ProductDTO {
  @SerializedName("allowRecharge")
  private Boolean allowRecharge = null;

  /**
   * Gets or Sets customerType
   */
  @JsonAdapter(CustomerTypeEnum.Adapter.class)
  public enum CustomerTypeEnum {
    ADULT("ADULT"),
    
    CHILD("CHILD"),
    
    SENIOR("SENIOR");

    private String value;

    CustomerTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CustomerTypeEnum fromValue(String text) {
      for (CustomerTypeEnum b : CustomerTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CustomerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CustomerTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CustomerTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CustomerTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("customerType")
  private CustomerTypeEnum customerType = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("packageProductId")
  private String packageProductId = null;

  @SerializedName("price")
  private Double price = null;

  @SerializedName("productId")
  private String productId = null;

  @SerializedName("rechargePrice")
  private Double rechargePrice = null;

  @SerializedName("retailPrice")
  private Double retailPrice = null;

  @SerializedName("sku")
  private String sku = null;

  @SerializedName("subProductId")
  private String subProductId = null;

  @SerializedName("tags")
  private java.util.List<String> tags = null;

  @SerializedName("timezone")
  private String timezone = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    BASIC_SINGLE("BASIC_SINGLE"),
    
    BASIC_VALID_HOURS("BASIC_VALID_HOURS"),
    
    PASS_LIMITED("PASS_LIMITED"),
    
    PASS_UNLIMITED("PASS_UNLIMITED"),
    
    PASS_CALENDAR("PASS_CALENDAR"),
    
    FLEXPASS("FLEXPASS"),
    
    PASS_CURRENCY("PASS_CURRENCY");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("validValue")
  private Integer validValue = null;

  @SerializedName("validationTag")
  private String validationTag = null;

  @SerializedName("vendorAccountId")
  private String vendorAccountId = null;

  @SerializedName("vendorName")
  private String vendorName = null;

  @SerializedName("vendorSku")
  private String vendorSku = null;

  @SerializedName("voucherPattern")
  private VoucherPattern voucherPattern = null;

  /**
   * Gets or Sets voucherType
   */
  @JsonAdapter(VoucherTypeEnum.Adapter.class)
  public enum VoucherTypeEnum {
    DEFAULT("DEFAULT"),
    
    CUSTOM("CUSTOM");

    private String value;

    VoucherTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VoucherTypeEnum fromValue(String text) {
      for (VoucherTypeEnum b : VoucherTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<VoucherTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VoucherTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VoucherTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return VoucherTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("voucherType")
  private VoucherTypeEnum voucherType = null;

  public ProductDTO allowRecharge(Boolean allowRecharge) {
    this.allowRecharge = allowRecharge;
    return this;
  }

   /**
   * Get allowRecharge
   * @return allowRecharge
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllowRecharge() {
    return allowRecharge;
  }

  public void setAllowRecharge(Boolean allowRecharge) {
    this.allowRecharge = allowRecharge;
  }

  public ProductDTO customerType(CustomerTypeEnum customerType) {
    this.customerType = customerType;
    return this;
  }

   /**
   * Get customerType
   * @return customerType
  **/
  @ApiModelProperty(value = "")
  public CustomerTypeEnum getCustomerType() {
    return customerType;
  }

  public void setCustomerType(CustomerTypeEnum customerType) {
    this.customerType = customerType;
  }

  public ProductDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ProductDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ProductDTO packageProductId(String packageProductId) {
    this.packageProductId = packageProductId;
    return this;
  }

   /**
   * Get packageProductId
   * @return packageProductId
  **/
  @ApiModelProperty(value = "")
  public String getPackageProductId() {
    return packageProductId;
  }

  public void setPackageProductId(String packageProductId) {
    this.packageProductId = packageProductId;
  }

  public ProductDTO price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(value = "")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public ProductDTO productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @ApiModelProperty(value = "")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public ProductDTO rechargePrice(Double rechargePrice) {
    this.rechargePrice = rechargePrice;
    return this;
  }

   /**
   * Get rechargePrice
   * @return rechargePrice
  **/
  @ApiModelProperty(value = "")
  public Double getRechargePrice() {
    return rechargePrice;
  }

  public void setRechargePrice(Double rechargePrice) {
    this.rechargePrice = rechargePrice;
  }

  public ProductDTO retailPrice(Double retailPrice) {
    this.retailPrice = retailPrice;
    return this;
  }

   /**
   * Get retailPrice
   * @return retailPrice
  **/
  @ApiModelProperty(value = "")
  public Double getRetailPrice() {
    return retailPrice;
  }

  public void setRetailPrice(Double retailPrice) {
    this.retailPrice = retailPrice;
  }

  public ProductDTO sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * Get sku
   * @return sku
  **/
  @ApiModelProperty(value = "")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }

  public ProductDTO subProductId(String subProductId) {
    this.subProductId = subProductId;
    return this;
  }

   /**
   * Get subProductId
   * @return subProductId
  **/
  @ApiModelProperty(value = "")
  public String getSubProductId() {
    return subProductId;
  }

  public void setSubProductId(String subProductId) {
    this.subProductId = subProductId;
  }

  public ProductDTO tags(java.util.List<String> tags) {
    this.tags = tags;
    return this;
  }

  public ProductDTO addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new java.util.ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public java.util.List<String> getTags() {
    return tags;
  }

  public void setTags(java.util.List<String> tags) {
    this.tags = tags;
  }

  public ProductDTO timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @ApiModelProperty(value = "")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public ProductDTO type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public ProductDTO validValue(Integer validValue) {
    this.validValue = validValue;
    return this;
  }

   /**
   * Get validValue
   * @return validValue
  **/
  @ApiModelProperty(value = "")
  public Integer getValidValue() {
    return validValue;
  }

  public void setValidValue(Integer validValue) {
    this.validValue = validValue;
  }

  public ProductDTO validationTag(String validationTag) {
    this.validationTag = validationTag;
    return this;
  }

   /**
   * Get validationTag
   * @return validationTag
  **/
  @ApiModelProperty(value = "")
  public String getValidationTag() {
    return validationTag;
  }

  public void setValidationTag(String validationTag) {
    this.validationTag = validationTag;
  }

  public ProductDTO vendorAccountId(String vendorAccountId) {
    this.vendorAccountId = vendorAccountId;
    return this;
  }

   /**
   * Get vendorAccountId
   * @return vendorAccountId
  **/
  @ApiModelProperty(value = "")
  public String getVendorAccountId() {
    return vendorAccountId;
  }

  public void setVendorAccountId(String vendorAccountId) {
    this.vendorAccountId = vendorAccountId;
  }

  public ProductDTO vendorName(String vendorName) {
    this.vendorName = vendorName;
    return this;
  }

   /**
   * Get vendorName
   * @return vendorName
  **/
  @ApiModelProperty(value = "")
  public String getVendorName() {
    return vendorName;
  }

  public void setVendorName(String vendorName) {
    this.vendorName = vendorName;
  }

  public ProductDTO vendorSku(String vendorSku) {
    this.vendorSku = vendorSku;
    return this;
  }

   /**
   * Get vendorSku
   * @return vendorSku
  **/
  @ApiModelProperty(value = "")
  public String getVendorSku() {
    return vendorSku;
  }

  public void setVendorSku(String vendorSku) {
    this.vendorSku = vendorSku;
  }

  public ProductDTO voucherPattern(VoucherPattern voucherPattern) {
    this.voucherPattern = voucherPattern;
    return this;
  }

   /**
   * Get voucherPattern
   * @return voucherPattern
  **/
  @ApiModelProperty(value = "")
  public VoucherPattern getVoucherPattern() {
    return voucherPattern;
  }

  public void setVoucherPattern(VoucherPattern voucherPattern) {
    this.voucherPattern = voucherPattern;
  }

  public ProductDTO voucherType(VoucherTypeEnum voucherType) {
    this.voucherType = voucherType;
    return this;
  }

   /**
   * Get voucherType
   * @return voucherType
  **/
  @ApiModelProperty(value = "")
  public VoucherTypeEnum getVoucherType() {
    return voucherType;
  }

  public void setVoucherType(VoucherTypeEnum voucherType) {
    this.voucherType = voucherType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductDTO productDTO = (ProductDTO) o;
    return Objects.equals(this.allowRecharge, productDTO.allowRecharge) &&
        Objects.equals(this.customerType, productDTO.customerType) &&
        Objects.equals(this.id, productDTO.id) &&
        Objects.equals(this.name, productDTO.name) &&
        Objects.equals(this.packageProductId, productDTO.packageProductId) &&
        Objects.equals(this.price, productDTO.price) &&
        Objects.equals(this.productId, productDTO.productId) &&
        Objects.equals(this.rechargePrice, productDTO.rechargePrice) &&
        Objects.equals(this.retailPrice, productDTO.retailPrice) &&
        Objects.equals(this.sku, productDTO.sku) &&
        Objects.equals(this.subProductId, productDTO.subProductId) &&
        Objects.equals(this.tags, productDTO.tags) &&
        Objects.equals(this.timezone, productDTO.timezone) &&
        Objects.equals(this.type, productDTO.type) &&
        Objects.equals(this.validValue, productDTO.validValue) &&
        Objects.equals(this.validationTag, productDTO.validationTag) &&
        Objects.equals(this.vendorAccountId, productDTO.vendorAccountId) &&
        Objects.equals(this.vendorName, productDTO.vendorName) &&
        Objects.equals(this.vendorSku, productDTO.vendorSku) &&
        Objects.equals(this.voucherPattern, productDTO.voucherPattern) &&
        Objects.equals(this.voucherType, productDTO.voucherType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowRecharge, customerType, id, name, packageProductId, price, productId, rechargePrice, retailPrice, sku, subProductId, tags, timezone, type, validValue, validationTag, vendorAccountId, vendorName, vendorSku, voucherPattern, voucherType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductDTO {\n");
    
    sb.append("    allowRecharge: ").append(toIndentedString(allowRecharge)).append("\n");
    sb.append("    customerType: ").append(toIndentedString(customerType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    packageProductId: ").append(toIndentedString(packageProductId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    rechargePrice: ").append(toIndentedString(rechargePrice)).append("\n");
    sb.append("    retailPrice: ").append(toIndentedString(retailPrice)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    subProductId: ").append(toIndentedString(subProductId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    validValue: ").append(toIndentedString(validValue)).append("\n");
    sb.append("    validationTag: ").append(toIndentedString(validationTag)).append("\n");
    sb.append("    vendorAccountId: ").append(toIndentedString(vendorAccountId)).append("\n");
    sb.append("    vendorName: ").append(toIndentedString(vendorName)).append("\n");
    sb.append("    vendorSku: ").append(toIndentedString(vendorSku)).append("\n");
    sb.append("    voucherPattern: ").append(toIndentedString(voucherPattern)).append("\n");
    sb.append("    voucherType: ").append(toIndentedString(voucherType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

